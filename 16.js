const input = String.raw`\....../...|..........|....../.../..-../.|...|......-.|..................................|.............../....
|....-.........\..........\......./.....................................|.....-...........||..................
.........-......|./...........\.../-......./.|...\.-.......................\....\.............................
...............//...............\.........................\.......................\....../........./.........\
..-........................-..........................................|............../..\.........../.........
..........\....\../...............|--....../..............-.............|...-.....\........\.........-...\-...
....|...|..|........................../..................-............./..\-........../|.........|...........|
.........-.....\...................-.............|.............../....-....-....|............../....\../-.....
.....\../\......../..|........................|.......-........................../-...|.......................
..............|/................|........|..-......|....|.|.......|.-....\.../.............|.....-.......-....
.-...|..................../..|......\......|./..-.....\../......................\.|..--...................../.
.............../..|...................-........./.................../....|.............-..........|.|..\../...
.|...........|-.........|/....\.....\...-...-.-.-......-...................................../.......\-.......
./................./.................\..................../.-..................|.....................\.....\..
\........-...|......|........-...................\.........................-..-........./....../.....\........
........-../..........|........................-..-/\...\........-.../.../...-......................./\.....-.
..//|\.........../\.......-...........\....\.....-./.|.............\...../..\.......||.......-................
........./....\.........\-................/................................|-...\/.........|......|...........
...|........\.../......\....../......\........./....|....../...../..|......../.-.........................\....
../......./....|................................................................................\\.......\..|.
.............-.\.|..........|....................................................-..........|.................
\......|.............\..-.....................................-.|...................................-|........
.....................-......|\......................|...-.\......-.........-.........\............//...-......
.../.....\..................|..-/....|.......\......\........./......./../............................\../....
....|....../.....-.............../........................../...................-...-.........................
...................|....|.........-..../....|.......|../|...../....\................../.............|.........
........./..\..-............................................\.....\......|...../\.\\..|..|/................\..
.....|\......|.............../............................/............................................../...-
...............|./../............/.\.\..............-./...................-./...|./...........................
-...|./.........../\...-...........................|....-.....................-......\..................-.....
....................|..|/............-./.....-\....|.............\./.............../.|.................\...|..
..\.|.-.\.................\...........-.........-..-.......................\.....|\......./.....-..........\..
.........|.........../............-...-...........-...-.......\.|....................-......./...|............
...|.......|.......................|...........\................\................\............../..\..........
/........../..-..............-................../..........\|..|..........-....\...........|-.................
.......\.............-..................-\......................\...................-..........-..........|...
../.....-\...............-.....\.............-....-\/..........|.-............/...............\.............\.
............/-........../.................\...../.........|.../....................\......|........-.........-
.......|....-...................../......../............................................/....-................
...\....-................................-....\.\.......................././............................./....
.......\...................../......\./.........|.......|.||....-.-.\..........-............................/.
..|..........\..-............|...........|..-......................\................/|....-...................
.-.........|...........-...|...../...|........../........|....................-.....-.........................
....................../.-...../............-......\...........-...\../...-|......./...........|......-||.-....
.........................................................-....-....../|........................../\..../......
.........|.......|....................................-.........../.-....................-....-..........\....
..|../-.|..........|.....|-......\..-....|/........\..|......./..\../...\....................././.|...........
.-..................-../...........\.....................-..|/..................../........\......./..-.-....|
.............................../...|...\|.........-........./|..........-......../.......-.....-........|.....
.................|-.......\........-......-/-../............\....................\......//.-.....\.........-..
............/...............-.../........|..-.........../-................\...-.........../.......\\...\\/....
........................-..\.............\......|........|/................../..........\.//..................
...............-.............\|-........../.|............./......................./..............|./..........
.......\/-.....\..|................../.....\.....|...................|......|...................-.\...........
............................................-...................................-...........-\......|.........
................./..../...|-\......./...............|.......................-..|........................../../
.........|...........|..................\...|........|../...|.......|............./..............|............
.......\........................\....../.......................-..............................................
|.-................\...|........|.\..................|..-.......|....-..|....|..................|.............
..............-|.-...............|.........................................................../................
........\....................|........../...........\.....|......|...................||.......................
.....................-...............................\...\.....-....\..................-...........\..........
..............|..\............../......-..................-....//..\|.|.\.......|.....................-.......
.\...|........||............................/................\....|..................\.......\..............-.
.............|...|.........../..|..............|.||../................|......|....................-....\......
.....................\.-...........\.|...|................|........-../..............|...|....................
....\.......\..............|.-\..................|........|../......./..-..../.........-.\...\................
.............|\......|/.....-....-......\......../............|....\....\...........................-.........
.........\..../................................-.................\\.....|...-..........-...........|......../.
..........-...................-..\...............-...\........|............\..../\...|...\..........|.........
||........\.................|......\|../...\..-...|../............................../.........................
..................\......................-|.....\.|..........|...||.........|..........\...|..................
............../..|.............-.....\............../........-.-......................-|.....-........|....../
..........................................///.....|...-..|.-...................\-...........\......\......./..
.....|.|.........................................................-.........................../|..|-...........
..../..../......-........|.......|.....\......-./...../.............|..............\....-......./|.\.\./...-\.
...\..........-..|...................|............................/.....\........\............................
........\..\...-................/..\...--...................................../\.......-....../......-.....\..
..-..................|...\......\..........-.|...\.................|..........\|...-..........................
\.............\-...\.............../...............\...\...................../.\.-..-\.-...|............./...\
../...|......../...........\..................\...................|.....\..|......\...../........-...../......
..../...........|.................../|...\.....-...-........|......../.............................|........|.
...................\................--..|..................../................................................
.\..\.............-/\.................................../...........|....\|......./.........................|.
............................./...................................-.............|............-/...|............
./.............................\......................-.........\..................-...-/.............-.......
...../..........|.....|...../.......................\.................\...........\...........................
........||....................-..-........|......../......./.-\............../............-...................
..........-..../...........|.-.............-...........................\.....|..|.-.....-...\...|.............
.../.....................\.........-..|......................./....\..\..................-....................
./.........../...............................................................-................................
..-....//................/.................../....-.\.....-....\....\..........|......................./......
..........................-......\....|...........\\|.........................-...\.....|...../........\......
........|...............-...\...................../........................../.-..........\../.......\........
........|.\.....|..\...||.............\............./............././.......\....\..................../.....|.
..................../.................-..\......../................-....|.......................|.............
...........|....\......./..|...............|........|............\.../................../..........\..........
......./...|........./...-.|\................................................./................./.............
...............|....\../..-/..............|.....................\....|...............\........../.....\.\.....
\|......||...../.../........................../......./.....\./...-.............../............|.......|....\.
.\./.....................|.........-.....-..../.\\..............................\.................-...........
...........-......../.....|.......\.........|..-.....|.......\............/...-...-.-.|.|..|-.............|...
....................\.....-./......./...................................-.........................|....|......
..\...............|................./............/.......\./.....\.........-./...-................|||...|.....
......|.....|...../....|......../.......\./........-..-...\.-..-.-.........................|........-\........
|-..................\.....-.............................|../\..........||............|.|................|.....
.................\..\.....|....................../.....-............./|...............................--.|..-|
..|.........-.-..........-./..................././................-...........................\......../......
.....|./-............|.......\/.....-...-........-......................\.......|.............\..|............
......|..............|............|./...........\..-......\..\.-..../..../.../................-|....|..\......`;
const example1 = String.raw`.|...\....
|.-.\.....
.....|-...
........|.
..........
.........\
..../.\\..
.-.-/..|..
.|....-|.\
..//.|....`;

const dirs = {
  up: [-1, 0],
  down: [1, 0],
  left: [0, -1],
  right: [0, 1]
}

const lr = {
  up: 'right',
  right: 'up',
  down: 'left',
  left: 'down'
}

const rl = {
  up: 'left',
  right: 'down',
  down: 'right',
  left: 'up'
};

const cycles = (n, k) => [
  [0, k, 'down'],
  [n-1, k, 'up'],
  [k, 0, 'right'],
  [k, n-1, 'left']
]

function dfs (i, j, dir, tiles, n, energized, hash) {
  if (i < 0 || i >= n || j < 0 || j >= n) return

  const key = `${i},${j},${dir}`

  if (hash.has(key)) return

  hash.add(key)

  const tile = tiles[i][j]
  let data = []

  energized[i][j] = true

  switch (tile) {
    case '/':
      data.push([i + dirs[lr[dir]][0], j + dirs[lr[dir]][1], lr[dir]])
      break;
    case '\\':
      data.push([i + dirs[rl[dir]][0], j + dirs[rl[dir]][1], rl[dir]])
      break;
    case '|':
      if (dir === 'up' || dir === 'down') {
        data.push([i + dirs[dir][0], j + dirs[dir][1], dir])
      } else {
        data.push([i + dirs['up'][0], j + dirs['up'][1], 'up'])
        data.push([i + dirs['down'][0], j + dirs['down'][1], 'down'])
      }
      break;
    case '-':
      if (dir === 'left' || dir === 'right') {
        data.push([i + dirs[dir][0], j + dirs[dir][1], dir])
      } else {
        data.push([i + dirs['left'][0], j + dirs['left'][1], 'left'])
        data.push([i + dirs['right'][0], j + dirs['right'][1], 'right'])
      }
      break;
    default:
      data.push([i + dirs[dir][0], j + dirs[dir][1], dir])
      break;
  }

  for (const [x, y, d] of data) {
    dfs(x, y, d, tiles, n, energized, hash)
  }
}

(async function main () {
  const tiles = input.split('\n')
  const n = tiles.length
  let ans = 0

  console.log('---------')
  console.log('|       |')
  console.log('| START |')
  console.log('|       |')
  console.log('---------')
  console.time('start')

  for (let part2 of [false]) {
    // console.log(tiles);

    for (let k = 0; k < n; k++) {

      const cycle = cycles(n, k)

      for (let [i, j, dir] of cycle) {
        const energized = Array(n).fill().map(() => Array(n).fill(false))
        const hash = new Set()

        dfs(i, j, dir, tiles, n, energized, hash)

        // console.log(energized.map(row => row.map(c => c ? '#' : '.').join('')).join('\n'))
        // console.log('\n');

        ans = Math.max(ans, energized.reduce((a, b) => a + b.reduce((c, d) => c + +d, 0), 0))
      }
    }

    console.log(ans);
  }

  console.timeEnd('start')
})()
